@{
    Layout = "_NavigationLayout";
}
@model ReportsViewModel

<div class="row">
    <legend>
        <h1 style="text-align: center;">Reports</h1>
        <hr/>
    </legend>
</div>

@{
    var role = Model.Login.Role;

    if (role == "Administrator" || role == "Regulator")
    {
        <br/>

        <div class="row">
            <div class="col-lg-6">
                <form role="form" method="post" asp-controller="Trader">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Team ID" aria-label="Team ID" asp-for="TeamId">
                        <span class="input-group-btn">
                            <input type="submit" asp-action="Submit" value="Search" class="btn btn-primary" type="button"/>
                        </span>
                    </div>
                </form>

            </div>
        </div>
    }
}


@{

    if (role == "Team" && !AppSettings.IsReportsEnabled())
    {
        <div class="alert alert-info" role="alert">
            <strong>Wait up!</strong> The reports page is not enabled yet. Refresh the page at the end of the quarter.
        </div>
    }
    else
    {
        var team = Model.Team;

        if (team != null)
        {
            <h3 class="reports">@team.Name - @team.Id</h3>
            <table class="table reports">
                <thead class="thead-dark">
                <tr>
                    <th>Security</th>
                    <th>Position</th>
                    <th>Current Price</th>
                    <th>Realized P&amp;L</th>
                    <th>Unrealized P&amp;L</th>
                    <th>Total P&amp;L</th>
                </tr>
                </thead>
                <tbody>

                @{
                    var prices = Model.Prices;
                    team.Calculate(prices);

                    var teamPositions = team.Positions;
                    var teamRealizedPnLs = team.RealizedPnLs;
                    var teamUnrealizedPnLs = team.UnrealizedPnLs;
                    var teamTotalPnLs = team.TotalPnLs;

                    foreach (var key in teamPositions.Keys)
                    {
                        <tr>
                            <th scope="row">@key</th>
                            <td>@teamPositions[key]</td>
                            <td>$@($"{prices[key]:n0}")</td>

                            @{
                                var realizedPnL = teamRealizedPnLs[key];
                                if (realizedPnL < 0)
                                {
                                    <td style="color: red">($@($"{Math.Abs(realizedPnL):n0}"))</td>
                                }
                                else
                                {
                                    <td>$@($"{realizedPnL:n0}")</td>
                                }

                                var unrealizedPnL = teamUnrealizedPnLs[key];

                                if (unrealizedPnL < 0)
                                {
                                    <td style="color: red">($@($"{Math.Abs(unrealizedPnL):n0}"))</td>
                                }
                                else
                                {
                                    <td>$@($"{unrealizedPnL:n0}")</td>
                                }

                                var totalPnL = teamTotalPnLs[key];

                                if (totalPnL < 0)
                                {
                                    <td style="color: red">($@($"{Math.Abs(totalPnL):n0}"))</td>
                                }
                                else
                                {
                                    <td>$@($"{totalPnL:n0}")</td>
                                }
                            }

                        </tr>
                    }

                    var teamAccumulatedPenalties = team.AccumulatedPenalties;

                    if (teamAccumulatedPenalties > 0)
                    {
                        <tr class="table-danger">
                            <th scope="row">Penalties</th>
                            <td>@teamAccumulatedPenalties</td>
                            <td/>
                            <td/>
                            <td/>
                            <td style="color: red">($@($"{team.AccumulatedPenaltiesValue:n0}"))</td>
                        </tr>
                    }
                }

                <tr class="table-active">
                    <th scope="row">Total</th>
                    <td/>
                    <td/>
                    <td/>
                    <td/>

                    @{
                        var teamPnL = team.PnL();

                        if (teamPnL < 0)
                        {
                            <td style="color: red">($@($"{Math.Abs(teamPnL):n0}"))</td>
                        }
                        else
                        {
                            <td>$@($"{teamPnL:n0}")</td>
                        }
                    }

                </tr>

                <tr class="table-active">
                    <th scope="row">Average P&amp;L</th>
                    <td/>
                    <td/>
                    <td/>
                    <td/>

                    @{
                        var averagePnL = team.AveragePnL();

                        if (averagePnL < 0)
                        {
                            <td style="color: red">($@($"{Math.Abs(averagePnL):n0}"))</td>
                        }
                        else
                        {
                            <td>$@($"{averagePnL:n0}")</td>
                        }
                    }

                </tr>
                </tbody>
            </table>

            foreach (var trader in team.Traders)
            {
                <h3 class="reports">@trader.Name - @trader.Id</h3>
                <table class="table reports">
                    <thead class="thead-dark">
                    <tr>
                        <th>Security</th>
                        <th>Position</th>
                        <th>Average Open Price</th>
                        <th>Current Price</th>
                        <th>Realized P&amp;L</th>
                        <th>Unrealized P&amp;L</th>
                        <th>Total P&amp;L</th>
                    </tr>
                    </thead>
                    <tbody>

                    @{
                        var traderPostions = trader.Positions;
                        var traderAverageOpenPrices = trader.AverageOpenPrices;
                        var traderRealizedPnLs = trader.RealizedPnLs;
                        var traderUnrealizedPnLs = trader.UnrealizedPnLs;
                        var traderTotalPnLs = trader.TotalPnLs;

                        foreach (var key in traderPostions.Keys)
                        {
                            <tr>
                                <th scope="row">@key</th>
                                <td>@traderPostions[key]</td>
                                <td>$@($"{traderAverageOpenPrices[key]:n0}")</td>
                                <td>$@($"{prices[key]:n0}")</td>

                                @{
                                    var realizedPnL = traderRealizedPnLs[key];

                                    if (realizedPnL < 0)
                                    {
                                        <td style="color: red">($@($"{Math.Abs(realizedPnL):n0}"))</td>
                                    }
                                    else
                                    {
                                        <td>$@($"{realizedPnL:n0}")</td>
                                    }

                                    var unrealizedPnL = traderUnrealizedPnLs[key];

                                    if (unrealizedPnL < 0)
                                    {
                                        <td style="color: red">($@($"{Math.Abs(unrealizedPnL):n0}"))</td>
                                    }
                                    else
                                    {
                                        <td>$@($"{unrealizedPnL:n0}")</td>
                                    }

                                    var totalPnL = traderTotalPnLs[key];

                                    if (totalPnL < 0)
                                    {
                                        <td style="color: red">($@($"{Math.Abs(totalPnL):n0}"))</td>
                                    }
                                    else
                                    {
                                        <td>$@($"{totalPnL:n0}")</td>
                                    }
                                }

                            </tr>
                        }

                        var traderAccumulatedPenalties = trader.AccumulatedPenalties;

                        if (traderAccumulatedPenalties > 0)
                        {
                            <tr class="table-danger">
                                <th scope="row">Penalties</th>
                                <td>@trader.AccumulatedPenalties</td>
                                <td/>
                                <td/>
                                <td/>
                                <td/>
                                <td style="color: red">($@($"{trader.AccumulatedPenaltiesValue:n0}"))</td>
                            </tr>
                        }
                    }

                    <tr class="table-active">
                        <th scope="row">Total</th>
                        <td/>
                        <td/>
                        <td/>
                        <td/>
                        <td/>

                        @{
                            var traderPnL = trader.PnL();

                            if (traderPnL < 0)
                            {
                                <td style="color: red">($@($"{Math.Abs(traderPnL):n0}"))</td>
                            }
                            else
                            {
                                <td>$@($"{traderPnL:n0}")</td>
                            }
                        }

                    </tr>
                    </tbody>
                </table>
            }
        }
    }
}


<br/>