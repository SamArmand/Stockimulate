@{
    Layout = "NavPage";
}
@using Stockimulate.Models

<legend><h1>Standings</h1></legend>
<div class="row">
    <div class="col-6">
        
        <h2>Teams</h2>

        <table class="table">
            <thead class="thead-inverse">
            <tr>
                <th>Rank</th>
                <th>Team Name/ID</th>
                <th>Average P&amp;L</th>
            </tr>
            <thead>
            <tbody>
    
            @{
                var traders = new List<Trader>();

                var prices = Security.GetAll().Values.ToDictionary(x => x.Symbol, x => x.Price);

                var teams = Team.GetAll().ToList();

                foreach (var team in teams)
                {
                    team.Calculate(prices);
                }

                teams = teams.OrderByDescending(t => t.AveragePnL()).ToList();

                var rank = 0;

                for (var i = 0; i < teams.Count; ++i)
                {
                    traders.AddRange(teams[i].Traders);

                    ++rank;

                    <tr>
                        <th scope="row">
                            @(i > 0 && teams[i].AveragePnL() == teams[i - 1].AveragePnL()
                                  ? "-"
                                  : rank.ToString())
                        </th>
                        <td>@teams[i].Name - @teams[i].Id</td>
                        <td>$@teams[i].AveragePnL()</td>
                    </tr>
                }

                traders = traders.OrderByDescending(t => t.PnL()).ToList();
            }
            </tbody>
        </table>
    
    </div>

    <div class="col-6">
        
        <h2>Traders</h2>

        <table class="table">
            <thead class="thead-inverse">
            <tr>
                <th>Rank</th>
                <th>Name/ID</th>
                <th>P&amp;L</th>
            </tr>
            <thead>
            <tbody>
    
            @{
                rank = 0;

                for (var i = 0; i < traders.Count; ++i)
                {
                    ++rank;
                    <tr>
                        <th scope="row">
                        @(i > 0 && traders.ElementAt(i).PnL() == traders.ElementAt(i - 1).PnL()
                            ? "-"
                            : rank.ToString())
                        </th>
                        <td>@traders.ElementAt(i).Name - @traders.ElementAt(i).Id</td>
                        <td>$@traders.ElementAt(i).PnL()</td>
                    </tr>
                }
            }
    
            </tbody>
        </table>
    
    </div>
</div>    
