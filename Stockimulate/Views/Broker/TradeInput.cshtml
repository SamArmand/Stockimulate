@{
    Layout = "_NavigationLayout";
}
@model TradeInputViewModel
@{
    var symbol = string.Empty;
}
<div class="row">
    <div class="col-10">

        <form class="form-horizontal" role="form" method="post" asp-controller="Broker">
            <fieldset>

                <!-- Form Name -->
                <legend>
                    <h1>
                        Trade
                        @{
                            var securities = Security.GetAll();

                            try
                            {
                                var brokerPermission = int.Parse(Model.Login.Username.Substring(6)) % securities.Count;

                                foreach (var security in securities.Where(security => security.Value.Id == brokerPermission))
                                {
                                    symbol = security.Key;

                                    break;
                                }
                            }

                            catch (Exception)
                            {
                                //ignored
                            }
                        }
                        @symbol
                    </h1>
                </legend>

                <!-- Text input-->
                <div class="form-group row">
                    <label class="col-sm-1 col-form-label">Buyer ID</label>
                    <div class="col-sm-2">
                        <input type="text" placeholder="Buyer ID" class="form-control" asp-for="BuyerId" required/>
                    </div>

                    <label class="col-sm-1 col-sm-offset-1 col-form-label">Seller ID</label>
                    <div class="col-sm-2">
                        <input type="text" placeholder="Seller ID" class="form-control" asp-for="SellerId" required/>
                    </div>
                </div>

                <!-- Text input-->
                <div class="form-group row">
                    <label class="col-sm-1 col-form-label">Security</label>
                    <div class="col-sm-2">

                        <select class="form-control" asp-for="Symbol">

                            @if (Model.Login.Role == "Administrator")
                            {
                                foreach (var security in securities)
                                {
                                    <option>@security.Key</option>
                                }
                            }
                            else
                            {
                                <option>@symbol</option>
                            }
                        </select>

                    </div>

                    <label class="col-sm-1 col-sm-offset-1 col-form-label">Quantity</label>
                    <div class="col-sm-2">
                        <input type="text" placeholder="Quantity" class="form-control" asp-for="Quantity"/>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-1 col-form-label">Price</label>
                    <div class="col-sm-2 ">
                        <input type="text" placeholder="Price" class="form-control" asp-for="Price"/>
                    </div>
                </div>

                <div class="form-group row">

                    <div class="form-check">
                        <label class="form-check-label">
                            <input type="checkbox" class="form-check-input" asp-for="IsChecked">
                            I have verified that all fields are correct and wish to submit this trade.
                        </label>
                    </div>

                </div>

                <div class="row">
                    <div class="btn-group col-sm-12">

                        <input type="submit" formaction="Cancel" value="Cancel" class="btn btn-secondary"/>
                        <input type="submit" formaction="Submit" value="Submit" class="btn btn-primary"/>

                    </div>
                </div>

            </fieldset>
        </form>

        <br/>

        @switch (Model.Result)
        {
            case "Error":
                <div class="alert alert-danger alert-error bg-danger col-lg-5">
                    @Model.ErrorMessage
                </div>
                break;
            case "Success":
                <div class="alert alert-success bg-success col-lg-5">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    <strong>Success!</strong> Trade is complete.
                </div>
                break;
            case "Warning":
                <div class="alert alert-warning bg-warning col-lg-5">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    <strong>Info!</strong> Verify all the fields in the form and check the checkbox before submitting.
                </div>
                break;
            default:
                <br/>
                break;
        }

    </div>

    <div class="col-2">
        @if (Model.Login.Role != "Administrator")
        {
            @Html.Partial("MiniTickerPartial", new MiniTickerPartialViewModel {Symbol = symbol})
        }
        else
        {
            foreach (var key in Security.NamesAndSymbols.Keys)
            {
                @Html.Partial("MiniTickerPartial", new MiniTickerPartialViewModel {Symbol = key})
            }
        }
    </div>

</div>

@section Scripts {

    <script src="https://js.pusher.com/4.1/pusher.min.js"></script>
    <script>

        // ReSharper disable once PossiblyUnassignedProperty
        const channel = (new Pusher('@Constants.PusherKey',
            {
                cluster: '@Constants.PusherCluster',
                encrypted: true
// ReSharper disable once PossiblyUnassignedProperty
            })).subscribe('stockimulate');

        channel.bind('update-market',
            function(message) {

                var tickerDiv;
                var priceH4;
                var changeSpan;
                var caretSpan;
            
                @if (Model.Login.Role == "Administrator")
                {
                    <text>
                        var effect;
                        var newPrice;
                    </text>

                    foreach (var kvp in Security.GetAll())
                    {
                        var security = kvp.Value;
                        var securitySymbol = security.Symbol;

                        var priceH4Id = "PriceH4" + securitySymbol;
                        var changeSpanId = "ChangeSpan" + securitySymbol;
                        var tickerDivId = "TickerDiv" + securitySymbol;
                        var caretSpanId = "CaretSpan" + securitySymbol;

                        <text>
                
                            tickerDiv = document.getElementById("@tickerDivId");
                            priceH4 = document.getElementById("@priceH4Id");
                            changeSpan = document.getElementById("@changeSpanId");
                            caretSpan = document.getElementById("@caretSpanId");

                            if (message.day === 0) {
                                effect = 0;
                                newPrice = message.effects[@security.Id];
                            } else {
                                effect = message.effects[@security.Id];
                                newPrice = parseInt(priceH4.innerText.substring(1)) +
                                    effect;
                            }

                            priceH4.innerHTML = `$${newPrice}`;
                            changeSpan.innerHTML = Math.abs(effect);

                            if (effect > 0) {
                                tickerDiv.className = "card mb-3 bg-success text-white";
                                caretSpan.innerHTML = '<i aria-hidden="true" class="fa fa-caret-up"></i>';
                            } else if (effect < 0) {
                                tickerDiv.className = "card mb-3 bg-danger text-white";
                                caretSpan.innerHTML = '<i aria-hidden="true" class="fa fa-caret-down"></i>';
                            } else {
                                tickerDiv.className = "card mb-3 bg-warning text-white";
                                caretSpan.innerHTML = "";
                            }
                        </text>
                    }
                }
                else
                {
                    var security = Security.GetAll().FirstOrDefault(s => s.Key == symbol).Value;
                    var securitySymbol = security.Symbol;

                    var priceH4Id = "PriceH4" + securitySymbol;
                    var changeSpanId = "ChangeSpan" + securitySymbol;
                    var tickerDivId = "TickerDiv" + securitySymbol;
                    var caretSpanId = "CaretSpan" + securitySymbol;
                    <text>
                
                        tickerDiv = document.getElementById("@tickerDivId");
                        priceH4 = document.getElementById("@priceH4Id");
                        changeSpan = document.getElementById("@changeSpanId");
                        caretSpan = document.getElementById("@caretSpanId");

                        if (message.day === 0) {
                            effect = 0;
                            newPrice = message.effects[@security.Id];
                        } else {
                            effect = message.effects[@security.Id];
                            newPrice = parseInt(priceH4.innerText.substring(1)) +
                                effect;
                        }

                        changeSpan.innerHTML = Math.abs(effect);

                        priceH4.innerHTML = `$${newPrice}`;

                        if (effect > 0) {
                            tickerDiv.className = "card mb-3 bg-success text-white";
                            caretSpan.innerHTML = '<i aria-hidden="true" class="fa fa-caret-up"></i>';
                        } else if (effect < 0) {
                            tickerDiv.className = "card mb-3 bg-danger text-white";
                            caretSpan.innerHTML = '<i aria-hidden="true" class="fa fa-caret-down"></i>';
                        } else {
                            tickerDiv.className = "card mb-3 bg-warning text-white";
                            caretSpan.innerHTML = "";
                        }
                    </text>
                }
            
            });

    </script>

}